{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvent.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["fetchWithOutToken","endpoint","data","method","url","process","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvent","events","map","event","end","moment","toDate","start","eventLoaded","type","payload","eventAddNew","eventUpdated","eventDeleted","eventSetActive","eventClearActive","processLogin","resp","dispatch","a","json","ok","setItem","Date","getTime","login","user","ckeckFinish","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","Swal","fire","msg","placeholder","onChange","Navbar","auth","useSelector","state","onClick","clear","CalendarEvent","title","openModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","dateStart","minute","seconds","add","dateEnd","initEvent","notes","CalendarModal","titleValid","setTitleValid","formValues","setFormValues","ui","active","calendar","useEffect","close","isOpen","modalOpen","onAfterOpen","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","dipatch","getState","id","console","error","eventStartUpdate","_id","uid","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","onSelectEvent","onDoubleClickEvent","onView","view","onSelectSlot","selectable","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","components","PrivateRouter","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e1ed46f.chunk.js","sourcesContent":["const fetchWithOutToken = (endpoint, data, method = 'GET' ) => {\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    }\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET' ) => {\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\r\n    const token = localStorage.getItem('calendar-token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            }\r\n        });\r\n    }\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nexport {\r\n    fetchWithOutToken,\r\n    fetchWithToken\r\n}","export const types = {\r\n    uiOpenModal: '[Ui] Open Modal',\r\n    uiCloseModal: '[Ui] Close Modal',\r\n    \r\n    eventAddNew: '[Event] Add New',\r\n    eventStartAddNew: '[Event] Start Add New',\r\n    eventSetActive: '[Event] Set Active',\r\n    eventClearActive: '[Event] Clear Active',\r\n    eventUpdated: '[Event] Uplated',\r\n    eventDeleted: '[Event] Deleted',\r\n    eventLoaded: '[Event] Loaded',\r\n    eventClean: '[Event] Clean',\r\n\r\n    authCheckingFinish: '[Auth] Ckecking Login Finish',\r\n    authStartLogin: '[Auth] Start Login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start Register',\r\n    authTokenRenew: '[Auth] Token Renew',\r\n    authLogout: '[Auth] Logout',\r\n\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvent = (events = []) => {\r\n    return events.map(event => ({\r\n        ...event,\r\n        end: moment(event.end).toDate(),\r\n        start: moment(event.start).toDate()\r\n    }));\r\n};","import Swal from \"sweetalert2\";\r\nimport {\r\n    fetchWithToken\r\n} from \"../helpers/fetch\";\r\nimport { prepareEvent } from \"../helpers/prepareEvent\";\r\nimport {\r\n    types\r\n} from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dipatch, getState) => {\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            const { user } = getState().auth;\r\n            if (body.ok) {\r\n                event.id = body.event.id\r\n                event.user = { name: user.name, _id: user.uid};\r\n                dipatch(eventAddNew(event));    \r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventStartLoaded = () => {\r\n    return async (dipatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dipatch(eventLoaded(prepareEvent(body.events)));    \r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dipatch, getState) => {\r\n        const { user } = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                event.user = user;\r\n                dipatch(eventUpdated(body.event));    \r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const eventStartDeleted = (event) => {\r\n    return async (dipatch, getState) => {\r\n        const { active } = getState().calendar;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${active.id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dipatch(eventDeleted());    \r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventClean = () => ({\r\n    type: types.eventClean\r\n});","import Swal from \"sweetalert2\";\r\nimport { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventClean } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken('auth',  {email, password}, 'POST');\r\n        const body = await processLogin(resp, dispatch);\r\n        if(!body.ok) {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (user) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken('auth/create', user, 'POST');\r\n        const body = await processLogin(resp, dispatch); \r\n        if(!body.ok) {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken('auth/');\r\n        const body = await processLogin(resp, dispatch);\r\n        if(!body.ok) {\r\n            dispatch(ckeckFinish());\r\n        }\r\n    }\r\n};\r\n\r\nconst processLogin = async (resp, dispatch) => {\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n        localStorage.setItem('calendar-token', body.token);\r\n        localStorage.setItem('calendar-token-init-date', new Date().getTime());\r\n        dispatch(login(body.user));\r\n    } \r\n    return body;\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventClean());\r\n    }\r\n};\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst ckeckFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        loginEmail: '',\r\n        loginPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        registerName: '',\r\n        registerEmail: '',\r\n        registerPassword1: '',\r\n        registerPassword2: '',\r\n    });\r\n\r\n    const { loginEmail, loginPassword } = formLoginValues;\r\n\r\n    const { registerName, registerEmail, registerPassword1, registerPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        dispatch(startLogin(formLoginValues.loginEmail, formLoginValues.loginPassword));\r\n    };\r\n\r\n    const handleRegister = (event) => {\r\n        event.preventDefault();\r\n        if (registerPassword1 !== registerPassword2) {\r\n            Swal.fire('Error', 'Passwords must be the same','error')\r\n        }\r\n        dispatch(startRegister({\r\n            email: registerEmail,\r\n            name: registerName,\r\n            password: registerPassword1\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                value={loginEmail}\r\n                                name='loginEmail'\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                value={loginPassword}\r\n                                name='loginPassword'\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                value={registerName}\r\n                                name='registerName'\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                value={registerEmail}\r\n                                name='registerEmail'\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Paswword\"\r\n                                value={registerPassword1}\r\n                                name='registerPassword1'\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repeat password\" \r\n                                value={registerPassword2}\r\n                                name='registerPassword2'\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Sing in\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                {auth.user.name}\r\n            </span>\r\n            <button className='btn btn-outline-danger'>\r\n                <span className=\"fas fa-sign-out-alt\" onClick={handleLogout}> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    return (\r\n        <div>\r\n           <strong>{event.title}</strong>\r\n           <span>-{event.user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const openModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const closeModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActive, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst dateStart = moment().minute(0).seconds(0).add(1,'hours');\r\nconst dateEnd = moment().minute(0).seconds(0).add(2,'hours');\r\n\r\nconst initEvent = {\r\n    title: 'New Event',\r\n    notes: '',\r\n    start: dateStart.toDate(),\r\n    end: dateEnd.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const {notes, title, start, end} = formValues;\r\n    const dispatch = useDispatch();\r\n\r\n    const ui = useSelector(state => state.ui);\r\n    const {active} = useSelector(state => state.calendar);\r\n   \r\n    const afterOpenModal = () => {\r\n        if(active) {\r\n            setFormValues(active); \r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(active) {\r\n            setFormValues(active); \r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [active]);\r\n\r\n    \r\n    const close = () => {\r\n        dispatch(closeModal());\r\n        dispatch(eventClearActive());\r\n    };\r\n\r\n    const onChangeStart = (value) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: value\r\n        });\r\n    };\r\n\r\n    const onChangeEnd = (value) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: value\r\n        })\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        setTitleValid(true);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error', 'The end event time must be greater than the start event time', 'error')\r\n            return; \r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (active) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew({\r\n                ...formValues\r\n            }));\r\n        }\r\n        close();\r\n    };\r\n\r\n    return ( \r\n        <Modal\r\n            isOpen={ui.modalOpen}\r\n            onAfterOpen={afterOpenModal}\r\n            onRequestClose={close}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            contentLabel=\"Example Modal\"\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h1> {active ? 'Editar evento' : 'Nuevo evento' }  </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleOnSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker onChange={onChangeStart} value={start} className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker onChange={onChangeEnd} value={end} minDate={start} className=\"form-control\" />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\" \r\n                    className=\"btn btn-outline-primary btn-block\">\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActive } from '../../actions/events';\r\nimport { openModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(eventClearActive());\r\n        dispatch(openModal());\r\n    }\r\n\r\n    return (\r\n        <button className='btn btn-primary fab' onClick={handleOnClick}>\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleOnClick = () => {\r\n        dispatch(eventStartDeleted());\r\n    }\r\n\r\n    return (\r\n        <button className='btn btn-danger fab-danger' onClick={handleOnClick}>\r\n            <i className='fas fa-trash'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoaded } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const calendar = useSelector(state => state.calendar);\r\n    const auth = useSelector(state => state.auth);\r\n    const events = calendar.events;\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(eventStartLoaded())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClickEvent = (event) => {\r\n        dispatch(eventSetActive(event));\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const onSelectEvent = (event) => {\r\n        dispatch(eventSetActive(event));\r\n    };\r\n\r\n    const onViewChange = (view) => {\r\n        setLastView(view);\r\n        localStorage.setItem('lastView', view);\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch(eventClearActive());\r\n    }\r\n\r\n    const eventStyleGetter = (event) => {\r\n        const style = {\r\n            backgroundColor: auth.user.uid === event.user._id ? '#347C7F' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar></Navbar>\r\n            <Calendar\r\n                onSelectEvent={onSelectEvent}\r\n                onDoubleClickEvent={onDoubleClickEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                view={lastView}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal></CalendarModal>\r\n            { calendar.active &&  <DeleteEventFab></DeleteEventFab> } \r\n            <AddNewFab></AddNewFab>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ( { isAuthenticated, component: Component, ...rest } ) => {\r\n    return (\r\n        <Route {...rest}  component={(props) => (\r\n            (isAuthenticated)\r\n            ? <Component {...props}></Component>\r\n            : <Redirect to='/login'></Redirect>\r\n        )}>\r\n        </Route>\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ( { isAuthenticated, component: Component, ...rest } ) => {\r\n    return (\r\n        <Route {...rest}  component={(props) => (\r\n            (!isAuthenticated)\r\n            ? <Component {...props}></Component>\r\n            : <Redirect to='/'></Redirect>\r\n        )}>\r\n        </Route>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRouter } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n  }, [dispatch]);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  if (auth.checking) {\r\n    return (<h1>Espere...</h1> );\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <PrivateRouter exact={true} path=\"/\" isAuthenticated={!!auth.user} component={CalendarScreen}>\r\n          </PrivateRouter>\r\n          <PublicRoute exact={true} path=\"/login\" isAuthenticated={!!auth.user} component={LoginScreen}>\r\n          </PublicRoute>\r\n          <Redirect to=\"/\"></Redirect>\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.authLogin: \r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                checking: false\r\n            };\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            };\r\n        case types.authLogout: \r\n            return {\r\n                checking: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    active: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                active: {...action.payload}\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, {...action.payload}]\r\n            };\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                active: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((event) => \r\n                    event.id === action.payload.id ? action.payload : event \r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((event) => \r\n                    event.id !== state.active.id \r\n                ),\r\n                active: null\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: action.payload\r\n            };\r\n        case types.eventClean:\r\n            return {\r\n                ...state,\r\n                events: [],\r\n                active: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routes/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter></AppRouter>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp></CalendarApp>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}